input {
  tcp {
    port => 3000
    codec => "json"
  }
}

filter {
  if !([event][type]) {
    mutate {
      add_field => {
        "[@metadata][deadletter]" => "true"
        "[deadletter][reason]" => "Event type not found"
      }
    }
  }
  if !([event][created]) {
    mutate {
      add_field => {
        "[@metadata][deadletter]" => "true"
        "[deadletter][reason]" => "Event created not found"
      }
    }
  }
  date {
    match => ["[event][created]", "yyyy-MM-dd'T'HH:mm:ssZZ"]
    target => "[@metadata][date]"
  }
  date_formatter {
    source => "[@metadata][date]"
    pattern => "yyyyMMdd"
    target => "[@metadata][date_Ymd]"
  }
  if "_dateparsefailure" in [tags] {
    mutate {
      add_field => {
        "[@metadata][deadletter]" => "true"
        "[deadletter][reason]" => "Unable to parse event created timestamp"
      }
    }
  }
  if [@metadata][deadletter] != "true" {
    mutate {
      add_field => {
        "[@metadata][deadletter]" => "false"
        "[@metadata][nats_subject]" => "%{[event][type]}"
      }
    }
    mutate {
      gsub => [
        "[@metadata][nats_subject]", ":", "."
      ]
    }
    uuid {
      target => "[event][id]"
    }
  }
}

output {
  stdout { codec => rubydebug { metadata => true } }
  if [@metadata][deadletter] == "true" {
    redis {
      key => "deadletter"
      data_type => "list"
    }
    nats {
      key => "deadletter"
    }
  } else {
    redis {
      key => "events"
      data_type => "list"
    }
    nats {
      key => "events.%{[@metadata][nats_subject]}"
    }
    elasticsearch {
      index => "events-%{[event][type]}-%{[@metadata][date_Ymd]}"
    }
  }
}
